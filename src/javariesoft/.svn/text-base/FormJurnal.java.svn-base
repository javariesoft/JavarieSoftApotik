/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * FormJurnal.java
 *
 * Created on Nov 19, 2011, 11:41:25 AM
 */
package javariesoft;

import com.erv.db.jurnalDao;
import com.erv.db.koneksi;
import com.erv.db.rincijurnalDao;
import com.erv.db.settingDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.jurnal;
import com.erv.model.rincijurnal;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author erwadi
 */
public class FormJurnal extends javax.swing.JInternalFrame {

    int IDJurnal = 0;
    String akunBank[];
    String kodeakun[];
    String namaAkun[];
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    Connection c;
    Connection cm;
    jurnal j;
    rincijurnal r;
    jurnalDao dbjurnal;
    rincijurnalDao dbrincijurnal;
    Statement stat = null;

    /** Creates new form FormJurnal */
    public FormJurnal() {
        initComponents();
        try {
            c = koneksi.getKoneksiJ();
            cm = koneksi.getKoneksiM();
            j = new jurnal();
            r = new rincijurnal();
            dbjurnal = new jurnalDao();
            dbrincijurnal = new rincijurnalDao();
            stat = cm.createStatement();
            buatTabel();
        } catch (Exception ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
        setTanggal();
        kosong();
        kosongAkun();
        isiCombo();
        setKodeJurnal();
        tanggal.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel1 = new javax.swing.JLabel();
        idjurnal = new javax.swing.JTextField();
        tanggal = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        deskripsi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        cboAkun = new javax.swing.JComboBox();
        btnInsert = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cboDK = new javax.swing.JComboBox();
        txtBiaya = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        rbKasMasuk = new javax.swing.JRadioButton();
        rbKasKeluar = new javax.swing.JRadioButton();
        rbBankMasuk = new javax.swing.JRadioButton();
        rbBankKeluar = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboGrup = new javax.swing.JComboBox();
        cboBank = new javax.swing.JComboBox();
        btnBaru = new javax.swing.JButton();
        txtDebet = new javax.swing.JFormattedTextField();
        txtKredit = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSelisih = new javax.swing.JFormattedTextField();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormJurnal.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(20, 50, 110, 15);

        idjurnal.setFont(resourceMap.getFont("idjurnal.font")); // NOI18N
        idjurnal.setText(resourceMap.getString("idjurnal.text")); // NOI18N
        idjurnal.setName("idjurnal"); // NOI18N
        panelCool1.add(idjurnal);
        idjurnal.setBounds(140, 50, 210, 21);

        tanggal.setFieldFont(resourceMap.getFont("tanggal.dch_combo_fieldFont")); // NOI18N
        panelCool1.add(tanggal);
        tanggal.setBounds(140, 80, 155, 20);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(20, 80, 110, 16);

        deskripsi.setFont(resourceMap.getFont("deskripsi.font")); // NOI18N
        deskripsi.setText(resourceMap.getString("deskripsi.text")); // NOI18N
        deskripsi.setName("deskripsi"); // NOI18N
        panelCool1.add(deskripsi);
        deskripsi.setBounds(140, 110, 460, 21);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 240, 640, 180);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(20, 170, 580, 10);

        cboAkun.setFont(resourceMap.getFont("cboAkun.font")); // NOI18N
        cboAkun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboAkun.setName("cboAkun"); // NOI18N
        panelCool1.add(cboAkun);
        cboAkun.setBounds(20, 180, 290, 21);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(20, 210, 90, 25);

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panelCool1.add(jButton1);
        jButton1.setBounds(120, 210, 100, 25);

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        panelCool1.add(jButton2);
        jButton2.setBounds(20, 430, 200, 25);

        cboDK.setFont(resourceMap.getFont("cboDK.font")); // NOI18N
        cboDK.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tambah", "Kurang" }));
        cboDK.setName("cboDK"); // NOI18N
        panelCool1.add(cboDK);
        cboDK.setBounds(320, 180, 100, 21);

        txtBiaya.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtBiaya.setFont(resourceMap.getFont("txtBiaya.font")); // NOI18N
        txtBiaya.setName("txtBiaya"); // NOI18N
        panelCool1.add(txtBiaya);
        txtBiaya.setBounds(430, 180, 170, 21);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(20, 20, 110, 14);

        rbKasMasuk.setFont(resourceMap.getFont("rbKasMasuk.font")); // NOI18N
        rbKasMasuk.setText(resourceMap.getString("rbKasMasuk.text")); // NOI18N
        rbKasMasuk.setName("rbKasMasuk"); // NOI18N
        rbKasMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKasMasukActionPerformed(evt);
            }
        });
        panelCool1.add(rbKasMasuk);
        rbKasMasuk.setBounds(140, 20, 100, 23);

        rbKasKeluar.setFont(resourceMap.getFont("rbKasKeluar.font")); // NOI18N
        rbKasKeluar.setText(resourceMap.getString("rbKasKeluar.text")); // NOI18N
        rbKasKeluar.setName("rbKasKeluar"); // NOI18N
        rbKasKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKasKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(rbKasKeluar);
        rbKasKeluar.setBounds(250, 20, 110, 23);

        rbBankMasuk.setFont(resourceMap.getFont("rbBankMasuk.font")); // NOI18N
        rbBankMasuk.setText(resourceMap.getString("rbBankMasuk.text")); // NOI18N
        rbBankMasuk.setName("rbBankMasuk"); // NOI18N
        rbBankMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBankMasukActionPerformed(evt);
            }
        });
        panelCool1.add(rbBankMasuk);
        rbBankMasuk.setBounds(370, 20, 110, 23);

        rbBankKeluar.setFont(resourceMap.getFont("rbBankKeluar.font")); // NOI18N
        rbBankKeluar.setText(resourceMap.getString("rbBankKeluar.text")); // NOI18N
        rbBankKeluar.setName("rbBankKeluar"); // NOI18N
        rbBankKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBankKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(rbBankKeluar);
        rbBankKeluar.setBounds(490, 20, 100, 23);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(420, 460, 70, 14);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        panelCool1.add(jLabel6);
        jLabel6.setBounds(20, 110, 110, 14);

        cboGrup.setFont(resourceMap.getFont("cboGrup.font")); // NOI18N
        cboGrup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Harta", "Hutang", "Modal", "Pendapatan", "Harga Pokok Penjualan", "Biaya" }));
        cboGrup.setName("cboGrup"); // NOI18N
        cboGrup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGrupActionPerformed(evt);
            }
        });
        panelCool1.add(cboGrup);
        cboGrup.setBounds(140, 140, 160, 21);

        cboBank.setFont(resourceMap.getFont("cboBank.font")); // NOI18N
        cboBank.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBank.setName("cboBank"); // NOI18N
        panelCool1.add(cboBank);
        cboBank.setBounds(370, 50, 220, 21);

        btnBaru.setFont(resourceMap.getFont("btnBaru.font")); // NOI18N
        btnBaru.setText(resourceMap.getString("btnBaru.text")); // NOI18N
        btnBaru.setName("btnBaru"); // NOI18N
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });
        panelCool1.add(btnBaru);
        btnBaru.setBounds(330, 140, 120, 23);

        txtDebet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtDebet.setText(resourceMap.getString("txtDebet.text")); // NOI18N
        txtDebet.setFont(resourceMap.getFont("txtDebet.font")); // NOI18N
        txtDebet.setName("txtDebet"); // NOI18N
        txtDebet.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtDebetCaretUpdate(evt);
            }
        });
        panelCool1.add(txtDebet);
        txtDebet.setBounds(330, 430, 160, 20);

        txtKredit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtKredit.setText(resourceMap.getString("txtKredit.text")); // NOI18N
        txtKredit.setFont(resourceMap.getFont("txtKredit.font")); // NOI18N
        txtKredit.setName("txtKredit"); // NOI18N
        txtKredit.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKreditCaretUpdate(evt);
            }
        });
        panelCool1.add(txtKredit);
        txtKredit.setBounds(500, 430, 160, 21);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(20, 140, 110, 14);

        txtSelisih.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtSelisih.setFont(resourceMap.getFont("txtSelisih.font")); // NOI18N
        txtSelisih.setName("txtSelisih"); // NOI18N
        panelCool1.add(txtSelisih);
        txtSelisih.setBounds(500, 460, 160, 21);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-690)/2, (screenSize.height-519)/2, 690, 519);
    }// </editor-fold>//GEN-END:initComponents

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
    try {
        // TODO add your handling code here:
        if (rbKasMasuk.isSelected()) {
            stat.execute("insert into rinciJurnal values('" + settingDao.getAkun(c, "KAS") + "','KAS'," + txtBiaya.getValue() + ",0)");
            stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "',0," + txtBiaya.getValue() + ")");
        } else if (rbKasKeluar.isSelected()) {
            stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "'," + txtBiaya.getValue() + ",0)");
            stat.execute("insert into rinciJurnal values('" + settingDao.getAkun(c, "KAS") + "','KAS',0," + txtBiaya.getValue() + ")");
        } else if (rbBankMasuk.isSelected()) {
            stat.execute("insert into rinciJurnal values('" + akunBank[cboBank.getSelectedIndex()] + "','BANK'," + txtBiaya.getValue() + ",0)");
            stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "',0," + txtBiaya.getValue() + ")");
        } else if (rbBankKeluar.isSelected()) {
            stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "'," + txtBiaya.getValue() + ",0)");
            stat.execute("insert into rinciJurnal values('" + akunBank[cboBank.getSelectedIndex()] + "','BANK',0," + txtBiaya.getValue() + ")");
        } else {
            if (cboDK.getSelectedIndex() == 0) {
                stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "'," + txtBiaya.getValue() + ",0)");
            } else {
                stat.execute("insert into rinciJurnal values('" + kodeakun[cboAkun.getSelectedIndex()] + "','" + namaAkun[cboAkun.getSelectedIndex()] + "',0," + txtBiaya.getValue() + ")");
            }
        }
        reloadData();
        cboAkun.requestFocus();
    } catch (SQLException ex) {
        reloadData();
        Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnInsertActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
}//GEN-LAST:event_jTable1MouseClicked

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    prosesInsert();
    kosong();
    kosongAkun();
}//GEN-LAST:event_jButton2ActionPerformed

private void rbKasMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKasMasukActionPerformed
// TODO add your handling code here:
    rbKasKeluar.setSelected(false);
    rbBankKeluar.setSelected(false);
    rbBankMasuk.setSelected(false);
    setKodeJurnal(1);
}//GEN-LAST:event_rbKasMasukActionPerformed

private void rbKasKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKasKeluarActionPerformed
// TODO add your handling code here:
    rbKasMasuk.setSelected(false);
    rbBankKeluar.setSelected(false);
    rbBankMasuk.setSelected(false);
    setKodeJurnal(2);
}//GEN-LAST:event_rbKasKeluarActionPerformed

private void rbBankMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBankMasukActionPerformed
// TODO add your handling code here:
    rbKasMasuk.setSelected(false);
    rbKasKeluar.setSelected(false);
    rbBankKeluar.setSelected(false);
    setKodeJurnal(3);
}//GEN-LAST:event_rbBankMasukActionPerformed

private void rbBankKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBankKeluarActionPerformed
// TODO add your handling code here:
    rbKasMasuk.setSelected(false);
    rbKasKeluar.setSelected(false);
    rbBankMasuk.setSelected(false);
    setKodeJurnal(4);
}//GEN-LAST:event_rbBankKeluarActionPerformed

private void cboGrupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGrupActionPerformed
// TODO add your handling code here:
    isiCombo();
}//GEN-LAST:event_cboGrupActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
                stat.execute("delete from rinciJurnal where KODEAKUN='"+jTable1.getValueAt(jTable1.getSelectedRow(),0).toString()+"'");
                reloadData();
        } catch (SQLException ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_jButton1ActionPerformed

private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruActionPerformed
// TODO add your handling code here:
    kosong();
    kosongAkun();
}//GEN-LAST:event_btnBaruActionPerformed

private void txtDebetCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtDebetCaretUpdate
// TODO add your handling code here:
    //txtSelisih.setValue(Double.parseDouble(txtDebet.getValue().toString()) - Double.parseDouble(txtKredit.getValue().toString()));
}//GEN-LAST:event_txtDebetCaretUpdate

private void txtKreditCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKreditCaretUpdate
// TODO add your handling code here:
    //
}//GEN-LAST:event_txtKreditCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnInsert;
    private javax.swing.JComboBox cboAkun;
    private javax.swing.JComboBox cboBank;
    private javax.swing.JComboBox cboDK;
    private javax.swing.JComboBox cboGrup;
    private javax.swing.JTextField deskripsi;
    private javax.swing.JTextField idjurnal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JRadioButton rbBankKeluar;
    private javax.swing.JRadioButton rbBankMasuk;
    private javax.swing.JRadioButton rbKasKeluar;
    private javax.swing.JRadioButton rbKasMasuk;
    private datechooser.beans.DateChooserCombo tanggal;
    private javax.swing.JFormattedTextField txtBiaya;
    private javax.swing.JFormattedTextField txtDebet;
    private javax.swing.JFormattedTextField txtKredit;
    private javax.swing.JFormattedTextField txtSelisih;
    // End of variables declaration//GEN-END:variables

    void kosong() {
        idjurnal.setText("");
        deskripsi.setText("");
        rbBankKeluar.setSelected(false);
        rbBankMasuk.setSelected(false);
        rbKasKeluar.setSelected(false);
        rbKasMasuk.setSelected(false);
        setKodeJurnal();
    }

    void kosongAkun() {
        try {
            stat.execute("delete from rinciJurnal");
            reloadData();
        } catch (SQLException ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void isiCombo() {
        cboAkun.removeAllItems();
        cboBank.removeAllItems();
        String sql="select * from PERKIRAAN where TIPE='D' and TIPE='SD' and GRUP="+(cboGrup.getSelectedIndex()+1)+"";
        try {
            Statement stat = c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
             ResultSet rs = stat.executeQuery(sql);
           
            int j = 0;
            if (rs.last()) {
                j = rs.getRow();
            }
            if (j > 0) {
                kodeakun = new String[j];
                namaAkun = new String[j];
                rs.beforeFirst();
                int c = 0;
                while (rs.next()) {
                    cboAkun.addItem(rs.getString(1) + "-" + rs.getString(2));
                    kodeakun[c] = rs.getString(1);
                    namaAkun[c] = rs.getString(2);
                    c++;
                }
            }
            rs = stat.executeQuery("select * from bank");
            j = 0;
            if (rs.last()) {
                j = rs.getRow();
            }
            if (j > 0) {
                akunBank = new String[j];
                rs.beforeFirst();
                int c = 0;
                while (rs.next()) {
                    cboBank.addItem(rs.getString(2));
                    akunBank[c] = rs.getString(3);
                    c++;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void setTanggal() {
        tanggal.setDateFormat(d);
        tanggal.setText(com.erv.function.Util.toDateStringSql(new Date()));
    }

    void setKodeJurnal() {
        String tgl = com.erv.function.Util.toDateStringSql(new Date());
        try {
            IDJurnal = dbjurnal.getIDJurnal(c);
            idjurnal.setText("F" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDJurnal);
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void buatTabel() {
        String sqlCreate = "create table rinciJurnal (KODEAKUN varchar(20),PERKIRAAN varchar(50), "
                + "DEBET double, "
                + "KREDIT double)";
        try {
            stat.execute(sqlCreate);
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void reloadData() {
        JDBCAdapter j = new JDBCAdapter(cm);
        j.executeQuery("select * from rinciJurnal");
        jScrollPane1.getViewport().remove(jTable1);
        jTable1 = new JTable(j);
        jTable1.setFont(new Font("Tahoma", Font.BOLD, 12));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setFocusable(false);
        jTable1.setFocusable(false);
        jScrollPane1.getViewport().add(jTable1);
        jScrollPane1.repaint();
        try {

            ResultSet rs=stat.executeQuery("select sum(debet) from rinciJurnal");
            if (rs.next()){
                txtDebet.setValue(rs.getDouble(1));
            }
            rs=stat.executeQuery("select sum(kredit) from rinciJurnal");
            if (rs.next()){
                txtKredit.setValue(rs.getDouble(1));
            }
            txtSelisih.setValue(Double.parseDouble(txtDebet.getValue().toString()) - Double.parseDouble(txtKredit.getValue().toString()));
        } catch (SQLException ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    void prosesInsert() {
        try {
            j.setID(IDJurnal);
            j.setKODEJURNAL(idjurnal.getText());
            j.setTANGGAL(java.sql.Date.valueOf(tanggal.getText()));
            j.setDESKRIPSI(deskripsi.getText());
            if (!dbjurnal.insertIntoJURNAL(c, j)) {
                JOptionPane.showMessageDialog(this, "Entri Data Ok");
                Statement s = cm.createStatement();
                ResultSet rs = s.executeQuery("select * from rinciJurnal");
                while (rs.next()) {
                    r.setKODEJURNAL("" + IDJurnal);
                    r.setKODEPERKIRAAN(rs.getString(1));
                    r.setDEBET(rs.getDouble(3));
                    r.setKREDIT(rs.getDouble(4));
                    dbrincijurnal.insertIntoRINCIJURNAL(c, r);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormJurnal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void setKodeJurnal(int pil) {
        String tgl = com.erv.function.Util.toDateStringSql(new Date());
        try {
            IDJurnal = dbjurnal.getIDJurnal(c);
            if (pil == 1) {
                idjurnal.setText("AK" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDJurnal);
            } else if (pil == 2) {
                idjurnal.setText("AM" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDJurnal);
            } else if (pil == 3) {
                idjurnal.setText("CK" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDJurnal);
            } else if (pil == 4) {
                idjurnal.setText("CM" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDJurnal);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
