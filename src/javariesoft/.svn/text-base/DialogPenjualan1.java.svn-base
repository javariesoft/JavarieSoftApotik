/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogPenjualan.java
 *
 * Created on Nov 26, 2011, 9:48:03 PM
 */
package javariesoft;

import com.erv.db.bankDao;
import com.erv.db.barangDao;
import com.erv.db.jurnalDao;
import com.erv.db.koneksi;
import com.erv.db.pelangganDao;
import com.erv.db.penjualanDao;
import com.erv.db.returDao;
import com.erv.db.rincipenjualanDao;
import com.erv.db.rincireturDao;
import com.erv.db.settingDao;
import com.erv.db.stokDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.barang;
import com.erv.model.jurnal;
import com.erv.model.pelanggan;
import com.erv.model.penjualan;
import com.erv.model.retur;
import com.erv.model.rincipenjualan;
import com.erv.model.rinciretur;
import com.erv.model.stok;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author erwadi
 */
public class DialogPenjualan1 extends javax.swing.JDialog {
    String id[];
    double total = 0, ttotalbayar = 0;
    double sisa = 0;
    int IDJurnal = 0;
    double tppn = 0;
    double tdiskon = 0;
    double hpp = 0;
    int IDjual, IDretur = 0;
    float tdp = 0;
    Connection cm;
    Connection c;
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    penjualan p = null;
    retur r = null;
    penjualanDao dbpenjualan;
    barangDao dbbarang;
    Statement stat = null;
    String pilPelanggan = "0";
    barang brg;

    /** Creates new form DialogPenjualan */
    public DialogPenjualan1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setting();
        kosongFaktur();
        kosongBarang();
        kosongHasil();
        kosongRetur();
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        try {
            c = koneksi.getKoneksiJ();
            dbpenjualan = new penjualanDao(c);
            p = new penjualan();
            r = new retur();
            IDjual = dbpenjualan.getID();
            dbbarang = new barangDao(c);
            setFaktur();
            cm = koneksi.getKoneksiM();
            stat = cm.createStatement();
            buatTabel();
            isiCombo();
        } catch (Exception ex) {
        }
        jTabbedPane1.setEnabledAt(0, true);
        tgl.setDateFormat(d);
        tgllunas.setDateFormat(d);
        tglRetur.setDateFormat(d);
    }

    public DialogPenjualan1(int id, double tot) {
        initComponents();
        setting();
        kosongFaktur();
        kosongBarang();
        kosongHasil();
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        try {
            c = koneksi.getKoneksiJ();
            dbpenjualan = new penjualanDao(c);
            p = new penjualan();
            r=new retur();
            IDjual = dbpenjualan.getID();
            dbbarang = new barangDao(c);
            setFaktur();
            cm = koneksi.getKoneksiM();
            stat = cm.createStatement();
            buatTabel();
        } catch (Exception ex) {
        }
        jTabbedPane1.setEnabledAt(0, true);
        tgl.setDateFormat(d);
        tgllunas.setDateFormat(d);
        tglRetur.setDateFormat(d);
        try {
            // TODO add your handling code here:
            p = dbpenjualan.getDetails(id);
            IDjual = p.getID();
            nofaktur.setText(p.getFAKTUR());
            Calendar cld = Calendar.getInstance();
            cld.setTime(p.getTANGGAL());
            tgl.setSelectedDate(cld);
            kodepelanggan.setText(p.getKODEPELANGGAN());
            kodepelanggan1.setText(p.getKODEPELANGGAN());
            pelanggan plg = new pelangganDao(c).getDetails(p.getKODEPELANGGAN());
            namapelanggan.setText(plg.getNAMA());
            namapelanggan1.setText(plg.getNAMA());
            statusbayar.setSelectedIndex(Integer.parseInt(p.getCASH()));
            cld.setTime(p.getTGLLUNAS());
            tgllunas.setSelectedDate(cld);
            diskon.setText("" + p.getDISKON());
            cboStatDiskon.setSelectedIndex(1);
            total = tot;
            hasilAkhir();
            ResultSet re = c.createStatement().executeQuery("select * from RINCIPENJUALAN where IDPENJUALAN=" + p.getID() + "");
            hapusTabel();
            buatTabel();
            while (re.next()) {
                brg = new barangDao(c).getDetails(re.getString(3));
                stat.execute("insert into rinci values('" + re.getString(3)
                        + "','" + brg.getNAMABARANG()
                        + "'," + re.getInt(4)
                        + "," + re.getString(5)
                        + "," + re.getString(6)
                        + "," + re.getString(7) + ")");
            }
            total = 0;
            hpp = 0;
            reloadData();
        } catch (Exception ex) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nofaktur = new javax.swing.JTextField();
        tgl = new datechooser.beans.DateChooserCombo();
        jLabel1 = new javax.swing.JLabel();
        statusbayar = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        tgllunas = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kodepelanggan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        diskon = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        namapelanggan = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ppn = new javax.swing.JTextField();
        cboStatDiskon = new javax.swing.JComboBox();
        cboStatPPN = new javax.swing.JComboBox();
        btnBaru = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        diskonitem = new javax.swing.JTextField();
        cboStatDiskonItem = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        cboCaraBayar = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        cboBank = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        txtkodeRetur = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        tglRetur = new datechooser.beans.DateChooserCombo();
        jLabel7 = new javax.swing.JLabel();
        kodepelanggan1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        namapelanggan1 = new javax.swing.JTextField();
        btnTambahRetur = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        cboCaraBayar1 = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cboBank1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        hasilTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        hasilDiskon = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        hasilBayar = new javax.swing.JTextField();
        hasilSisa = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        hasilTotalBayar = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        hasilppn = new javax.swing.JTextField();
        btnSimpanHasil = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        kodebarang = new javax.swing.JTextField();
        namabarang = new javax.swing.JTextField();
        jumlah = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btninsert = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(DialogPenjualan1.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jTabbedPane1.setFont(resourceMap.getFont("jTabbedPane1.font")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setName("jTable3"); // NOI18N
        jTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(160, 90, 20, 20);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 10, 110, 20);

        nofaktur.setFont(resourceMap.getFont("nofaktur.font")); // NOI18N
        nofaktur.setEnabled(false);
        nofaktur.setName("nofaktur"); // NOI18N
        jPanel1.add(nofaktur);
        nofaktur.setBounds(160, 10, 150, 21);

        tgl.setFieldFont(resourceMap.getFont("tgl.dch_combo_fieldFont")); // NOI18N
        tgl.setLocale(new java.util.Locale("in", "ID", ""));
        jPanel1.add(tgl);
        tgl.setBounds(160, 40, 150, 20);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(370, 70, 120, 20);

        statusbayar.setFont(resourceMap.getFont("statusbayar.font")); // NOI18N
        statusbayar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CASH", "HUTANG" }));
        statusbayar.setName("statusbayar"); // NOI18N
        statusbayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusbayarActionPerformed(evt);
            }
        });
        jPanel1.add(statusbayar);
        statusbayar.setBounds(510, 10, 150, 21);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(370, 10, 110, 20);

        tgllunas.setNothingAllowed(false);
        tgllunas.setFieldFont(resourceMap.getFont("tgllunas.dch_combo_fieldFont")); // NOI18N
        tgllunas.setLocale(new java.util.Locale("in", "ID", ""));
        jPanel1.add(tgllunas);
        tgllunas.setBounds(510, 40, 150, 20);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(370, 40, 110, 20);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 40, 100, 20);

        kodepelanggan.setFont(resourceMap.getFont("kodepelanggan.font")); // NOI18N
        kodepelanggan.setName("kodepelanggan"); // NOI18N
        kodepelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodepelangganActionPerformed(evt);
            }
        });
        kodepelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodepelangganKeyPressed(evt);
            }
        });
        jPanel1.add(kodepelanggan);
        kodepelanggan.setBounds(160, 70, 150, 21);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 70, 120, 20);

        diskon.setFont(resourceMap.getFont("diskon.font")); // NOI18N
        diskon.setName("diskon"); // NOI18N
        diskon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                diskonKeyPressed(evt);
            }
        });
        jPanel1.add(diskon);
        diskon.setBounds(510, 70, 150, 21);

        jLabel18.setFont(resourceMap.getFont("jLabel18.font")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        jPanel1.add(jLabel18);
        jLabel18.setBounds(20, 100, 120, 20);

        namapelanggan.setFont(resourceMap.getFont("namapelanggan.font")); // NOI18N
        namapelanggan.setEnabled(false);
        namapelanggan.setName("namapelanggan"); // NOI18N
        jPanel1.add(namapelanggan);
        namapelanggan.setBounds(160, 100, 190, 21);

        jLabel19.setFont(resourceMap.getFont("jLabel19.font")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N
        jPanel1.add(jLabel19);
        jLabel19.setBounds(20, 130, 100, 20);

        ppn.setFont(resourceMap.getFont("diskon.font")); // NOI18N
        ppn.setName("ppn"); // NOI18N
        ppn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ppnKeyPressed(evt);
            }
        });
        jPanel1.add(ppn);
        ppn.setBounds(510, 100, 150, 21);

        cboStatDiskon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "%", "CASH" }));
        cboStatDiskon.setName("cboStatDiskon"); // NOI18N
        jPanel1.add(cboStatDiskon);
        cboStatDiskon.setBounds(670, 70, 52, 20);

        cboStatPPN.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "%", "CASH" }));
        cboStatPPN.setName("cboStatPPN"); // NOI18N
        jPanel1.add(cboStatPPN);
        cboStatPPN.setBounds(670, 100, 52, 20);

        btnBaru.setFont(resourceMap.getFont("btnBaru.font")); // NOI18N
        btnBaru.setText(resourceMap.getString("btnBaru.text")); // NOI18N
        btnBaru.setName("btnBaru"); // NOI18N
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });
        jPanel1.add(btnBaru);
        btnBaru.setBounds(740, 120, 90, 30);

        jLabel9.setEnabled(false);
        jLabel9.setName("jLabel9"); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(170, 140, 0, 20);

        diskonitem.setEditable(false);
        diskonitem.setEnabled(false);
        diskonitem.setName("diskonitem"); // NOI18N
        diskonitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diskonitemActionPerformed(evt);
            }
        });
        jPanel1.add(diskonitem);
        diskonitem.setBounds(210, 140, 0, 20);

        cboStatDiskonItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "%", "CASH" }));
        cboStatDiskonItem.setEnabled(false);
        cboStatDiskonItem.setName("cboStatDiskonItem"); // NOI18N
        jPanel1.add(cboStatDiskonItem);
        cboStatDiskonItem.setBounds(410, 140, 0, 20);

        jLabel25.setFont(resourceMap.getFont("jLabel25.font")); // NOI18N
        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N
        jPanel1.add(jLabel25);
        jLabel25.setBounds(370, 130, 100, 20);

        cboCaraBayar.setFont(resourceMap.getFont("cboCaraBayar.font")); // NOI18N
        cboCaraBayar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kas", "Bank" }));
        cboCaraBayar.setName("cboCaraBayar"); // NOI18N
        jPanel1.add(cboCaraBayar);
        cboCaraBayar.setBounds(160, 130, 150, 21);

        jLabel26.setFont(resourceMap.getFont("jLabel26.font")); // NOI18N
        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N
        jPanel1.add(jLabel26);
        jLabel26.setBounds(370, 100, 100, 20);

        cboBank.setFont(resourceMap.getFont("cboBank.font")); // NOI18N
        cboBank.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBank.setName("cboBank"); // NOI18N
        jPanel1.add(cboBank);
        cboBank.setBounds(510, 130, 150, 21);

        jTabbedPane1.addTab("Faktur", jPanel1);

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(null);

        txtkodeRetur.setFont(resourceMap.getFont("txtkodeRetur.font")); // NOI18N
        txtkodeRetur.setText(resourceMap.getString("txtkodeRetur.text")); // NOI18N
        txtkodeRetur.setName("txtkodeRetur"); // NOI18N
        txtkodeRetur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkodeReturActionPerformed(evt);
            }
        });
        jPanel4.add(txtkodeRetur);
        txtkodeRetur.setBounds(160, 10, 140, 21);

        jLabel20.setFont(resourceMap.getFont("jLabel20.font")); // NOI18N
        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N
        jPanel4.add(jLabel20);
        jLabel20.setBounds(20, 40, 90, 20);

        jLabel21.setFont(resourceMap.getFont("jLabel21.font")); // NOI18N
        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N
        jPanel4.add(jLabel21);
        jLabel21.setBounds(20, 10, 90, 20);

        tglRetur.setFieldFont(resourceMap.getFont("tglRetur.dch_combo_fieldFont")); // NOI18N
        jPanel4.add(tglRetur);
        tglRetur.setBounds(160, 40, 150, 20);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        jPanel4.add(jLabel7);
        jLabel7.setBounds(20, 70, 120, 20);

        kodepelanggan1.setFont(resourceMap.getFont("kodepelanggan1.font")); // NOI18N
        kodepelanggan1.setName("kodepelanggan1"); // NOI18N
        kodepelanggan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodepelanggan1ActionPerformed(evt);
            }
        });
        kodepelanggan1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodepelanggan1KeyPressed(evt);
            }
        });
        jPanel4.add(kodepelanggan1);
        kodepelanggan1.setBounds(160, 70, 150, 22);

        jLabel24.setFont(resourceMap.getFont("jLabel24.font")); // NOI18N
        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N
        jPanel4.add(jLabel24);
        jLabel24.setBounds(20, 100, 120, 20);

        namapelanggan1.setFont(resourceMap.getFont("namapelanggan1.font")); // NOI18N
        namapelanggan1.setEnabled(false);
        namapelanggan1.setName("namapelanggan1"); // NOI18N
        jPanel4.add(namapelanggan1);
        namapelanggan1.setBounds(160, 100, 270, 22);

        btnTambahRetur.setFont(resourceMap.getFont("btnTambahRetur.font")); // NOI18N
        btnTambahRetur.setText(resourceMap.getString("btnTambahRetur.text")); // NOI18N
        btnTambahRetur.setName("btnTambahRetur"); // NOI18N
        jPanel4.add(btnTambahRetur);
        btnTambahRetur.setBounds(20, 130, 90, 30);

        jLabel27.setFont(resourceMap.getFont("jLabel27.font")); // NOI18N
        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N
        jPanel4.add(jLabel27);
        jLabel27.setBounds(430, 10, 100, 20);

        cboCaraBayar1.setFont(resourceMap.getFont("cboCaraBayar1.font")); // NOI18N
        cboCaraBayar1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kas", "Bank" }));
        cboCaraBayar1.setName("cboCaraBayar1"); // NOI18N
        jPanel4.add(cboCaraBayar1);
        cboCaraBayar1.setBounds(570, 10, 150, 21);

        jLabel28.setFont(resourceMap.getFont("jLabel28.font")); // NOI18N
        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N
        jPanel4.add(jLabel28);
        jLabel28.setBounds(430, 40, 100, 20);

        cboBank1.setFont(resourceMap.getFont("cboBank1.font")); // NOI18N
        cboBank1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBank1.setName("cboBank1"); // NOI18N
        jPanel4.add(cboBank1);
        cboBank1.setBounds(570, 40, 150, 21);

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        panelCool1.add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 10, 890, 200);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable2.setName("jTable2"); // NOI18N
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        panelCool1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 250, 480, 130);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setFocusable(false);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 260, 890, 150);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(null);

        jLabel11.setFont(resourceMap.getFont("jLabel11.font")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel3.add(jLabel11);
        jLabel11.setBounds(20, 10, 110, 20);

        hasilTotal.setFont(resourceMap.getFont("hasilTotal.font")); // NOI18N
        hasilTotal.setEnabled(false);
        hasilTotal.setName("hasilTotal"); // NOI18N
        jPanel3.add(hasilTotal);
        hasilTotal.setBounds(140, 10, 180, 22);

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel3.add(jLabel12);
        jLabel12.setBounds(20, 40, 100, 20);

        hasilDiskon.setFont(resourceMap.getFont("hasilDiskon.font")); // NOI18N
        hasilDiskon.setEnabled(false);
        hasilDiskon.setName("hasilDiskon"); // NOI18N
        hasilDiskon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hasilDiskonKeyPressed(evt);
            }
        });
        jPanel3.add(hasilDiskon);
        hasilDiskon.setBounds(140, 40, 180, 22);

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        jPanel3.add(jLabel13);
        jLabel13.setBounds(340, 40, 100, 20);

        jLabel14.setFont(resourceMap.getFont("jLabel14.font")); // NOI18N
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        jPanel3.add(jLabel14);
        jLabel14.setBounds(340, 70, 90, 20);

        hasilBayar.setFont(resourceMap.getFont("hasilBayar.font")); // NOI18N
        hasilBayar.setName("hasilBayar"); // NOI18N
        hasilBayar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                hasilBayarCaretUpdate(evt);
            }
        });
        hasilBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hasilBayarKeyPressed(evt);
            }
        });
        jPanel3.add(hasilBayar);
        hasilBayar.setBounds(440, 40, 200, 22);

        hasilSisa.setFont(resourceMap.getFont("hasilSisa.font")); // NOI18N
        hasilSisa.setEnabled(false);
        hasilSisa.setName("hasilSisa"); // NOI18N
        jPanel3.add(hasilSisa);
        hasilSisa.setBounds(440, 70, 200, 22);

        jLabel17.setFont(resourceMap.getFont("jLabel17.font")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        jPanel3.add(jLabel17);
        jLabel17.setBounds(340, 10, 110, 20);

        hasilTotalBayar.setFont(resourceMap.getFont("hasilTotalBayar.font")); // NOI18N
        hasilTotalBayar.setEnabled(false);
        hasilTotalBayar.setName("hasilTotalBayar"); // NOI18N
        jPanel3.add(hasilTotalBayar);
        hasilTotalBayar.setBounds(440, 10, 200, 22);

        jLabel15.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        jPanel3.add(jLabel15);
        jLabel15.setBounds(20, 70, 70, 14);

        hasilppn.setFont(resourceMap.getFont("hasilppn.font")); // NOI18N
        hasilppn.setEnabled(false);
        hasilppn.setName("hasilppn"); // NOI18N
        jPanel3.add(hasilppn);
        hasilppn.setBounds(140, 70, 180, 22);

        btnSimpanHasil.setFont(resourceMap.getFont("btnSimpanHasil.font")); // NOI18N
        btnSimpanHasil.setText(resourceMap.getString("btnSimpanHasil.text")); // NOI18N
        btnSimpanHasil.setName("btnSimpanHasil"); // NOI18N
        btnSimpanHasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanHasilActionPerformed(evt);
            }
        });
        jPanel3.add(btnSimpanHasil);
        btnSimpanHasil.setBounds(680, 10, 150, 25);

        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(680, 40, 150, 25);

        panelCool1.add(jPanel3);
        jPanel3.setBounds(10, 410, 890, 110);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(null);

        kodebarang.setFont(resourceMap.getFont("kodebarang.font")); // NOI18N
        kodebarang.setName("kodebarang"); // NOI18N
        kodebarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodebarangActionPerformed(evt);
            }
        });
        kodebarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodebarangKeyPressed(evt);
            }
        });
        jPanel5.add(kodebarang);
        kodebarang.setBounds(0, 20, 130, 21);

        namabarang.setFont(resourceMap.getFont("kodebarang.font")); // NOI18N
        namabarang.setEnabled(false);
        namabarang.setName("namabarang"); // NOI18N
        jPanel5.add(namabarang);
        namabarang.setBounds(130, 20, 280, 21);

        jumlah.setFont(resourceMap.getFont("kodebarang.font")); // NOI18N
        jumlah.setName("jumlah"); // NOI18N
        jumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jumlahKeyPressed(evt);
            }
        });
        jPanel5.add(jumlah);
        jumlah.setBounds(560, 20, 130, 21);

        jLabel22.setFont(resourceMap.getFont("jLabel22.font")); // NOI18N
        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel22.setName("jLabel22"); // NOI18N
        jPanel5.add(jLabel22);
        jLabel22.setBounds(0, 0, 130, 20);

        jLabel23.setFont(resourceMap.getFont("jLabel23.font")); // NOI18N
        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel23.setName("jLabel23"); // NOI18N
        jPanel5.add(jLabel23);
        jLabel23.setBounds(130, 0, 280, 20);

        harga.setFont(resourceMap.getFont("kodebarang.font")); // NOI18N
        harga.setName("harga"); // NOI18N
        harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hargaKeyPressed(evt);
            }
        });
        jPanel5.add(harga);
        harga.setBounds(410, 20, 150, 21);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel5.add(jLabel8);
        jLabel8.setBounds(410, 0, 150, 20);

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel5.add(jLabel10);
        jLabel10.setBounds(690, 0, 200, 20);

        btninsert.setFont(resourceMap.getFont("btninsert.font")); // NOI18N
        btninsert.setText(resourceMap.getString("btninsert.text")); // NOI18N
        btninsert.setName("btninsert"); // NOI18N
        btninsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertActionPerformed(evt);
            }
        });
        jPanel5.add(btninsert);
        btninsert.setBounds(700, 20, 90, 20);

        btndelete.setFont(resourceMap.getFont("btndelete.font")); // NOI18N
        btndelete.setText(resourceMap.getString("btndelete.text")); // NOI18N
        btndelete.setName("btndelete"); // NOI18N
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel5.add(btndelete);
        btndelete.setBounds(790, 20, 90, 20);

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel16.setName("jLabel16"); // NOI18N
        jPanel5.add(jLabel16);
        jLabel16.setBounds(560, 0, 130, 20);

        panelCool1.add(jPanel5);
        jPanel5.setBounds(10, 210, 890, 50);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-928)/2, (screenSize.height-568)/2, 928, 568);
    }// </editor-fold>

private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {                                          
    //TODO add your handling code here:
    System.out.print("H");
    if (jTabbedPane1.getSelectedIndex() == 0) {
        kodepelanggan.requestFocus();
    } else if (jTabbedPane1.getSelectedIndex() == 1) {
        setRetur();
        kodepelanggan1.requestFocus();
    }
}                                         

private void diskonitemActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    btninsert.requestFocus();
}                                          

private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
    try {
        // TODO add your handling code here:
        stat.execute("delete from rinci where KODEBARANG='" + kodebarang.getText() + "'");
        total = 0;
        hpp = 0;
        reloadData();
        kosongBarang();
    } catch (SQLException ex) {
    }
}                                         

private void btninsertActionPerformed(java.awt.event.ActionEvent evt) {                                          
    try {
        // TODO add your handling code here:
        double tot = Integer.parseInt(jumlah.getText()) * Double.parseDouble(harga.getText()) - getDiskonitem();
        stat.execute("insert into rinci values('" + kodebarang.getText()
                + "','" + namabarang.getText()
                + "'," + jumlah.getText()
                + "," + harga.getText()
                + ",0"
                + "," + tot + ")");
        total = 0;
        hpp = 0;
        reloadData();
        kosongBarang();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, ex.toString());
    }
}                                         

private void jumlahKeyPressed(java.awt.event.KeyEvent evt) {                                  
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        btninsert.requestFocus();
    }
}                                 

private void hargaKeyPressed(java.awt.event.KeyEvent evt) {                                 
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        btninsert.requestFocus();
    }
}                                

private void kodebarangKeyPressed(java.awt.event.KeyEvent evt) {                                      
// TODO add your handling code here:
    System.out.print(evt.getKeyCode());
    if (evt.getKeyCode() == 40) {
        jScrollPane2.setVisible(true);
        jTable2.requestFocus();
        jTable2.getSelectionModel().setSelectionInterval(0, 0);
    }
    if (evt.getKeyCode() == 27) {
        jScrollPane2.setVisible(false);
    }
}                                     

private void kodebarangActionPerformed(java.awt.event.ActionEvent evt) {                                           
// TODO add your handling code here:
    jScrollPane2.setVisible(true);
    JDBCAdapter ja = new JDBCAdapter(c);
    ja.executeQuery("select KODEBARANG,NAMABARANG from BARANG where KODEBARANG like '" + kodebarang.getText() + "%' or lower(NAMABARANG) like '" + kodebarang.getText().toLowerCase() + "%' order by KODEBARANG");
    jScrollPane2.getViewport().remove(jTable2);
    jTable2 = new JTable(ja);
    jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTable2KeyPressed(evt);
        }
    });
    jTable2.setFont(new Font("Tahoma", Font.BOLD, 12));
    jScrollPane2.getViewport().add(jTable2);
    jScrollPane2.repaint();
}                                          

private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {                                   
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        try {
            barang b = new barang();
            b = dbbarang.getDetails(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
            kodebarang.setText(b.getKODEBARANG());
            namabarang.setText(b.getNAMABARANG());
            harga.setText("" + b.getHARGA());
            jScrollPane2.setVisible(false);
            jumlah.requestFocus();
        } catch (Exception ex) {
        }

    }
}                                  

private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {                                        
// TODO add your handling code here:
    kosongFaktur();
    kosongBarang();
    kosongHasil();
    hapusTabel();
    buatTabel();
    total = 0;
    hpp = 0;
    reloadData();
    setFaktur();
}                                       

private void ppnKeyPressed(java.awt.event.KeyEvent evt) {                               
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        hasilAkhir();
        kodebarang.requestFocus();
    }
}                              

private void diskonKeyPressed(java.awt.event.KeyEvent evt) {                                  
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        hasilAkhir();
        ppn.requestFocus();
    }
}                                 

private void kodepelangganKeyPressed(java.awt.event.KeyEvent evt) {                                         
// TODO add your handling code here:
    System.out.print(evt.getKeyCode());
    if (evt.getKeyCode() == 40) {
        jScrollPane3.setVisible(true);
        jTable3.requestFocus();
        jTable3.getSelectionModel().setSelectionInterval(0, 0);
    }
    if (evt.getKeyCode() == 27) {
        jScrollPane3.setVisible(false);
    }
}                                        

private void kodepelangganActionPerformed(java.awt.event.ActionEvent evt) {                                              
// TODO add your handling code here:
    pilPelanggan = "0";
    jScrollPane3.setVisible(true);
    JDBCAdapter ja = new JDBCAdapter(c);
    ja.executeQuery("select KODEPELANGGAN,NAMA from PELANGGAN where KODEPELANGGAN like '" + kodepelanggan.getText() + "%' or lower(NAMA) like '" + kodepelanggan.getText().toLowerCase() + "%'");
    jScrollPane3.getViewport().remove(jTable3);
    jTable3 = new JTable(ja);
    jTable3.addKeyListener(new java.awt.event.KeyAdapter() {

        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTable3KeyPressed(evt);
        }
    });
    jTable3.setFont(new Font("Tahoma", Font.BOLD, 12));
    jScrollPane3.getViewport().add(jTable3);
    jScrollPane3.repaint();
}                                             

private void statusbayarActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
}                                           

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
    try {
        // TODO add your handling code here:
        Statement s = cm.createStatement();
        ResultSet rs = s.executeQuery("select * from rinci where KODEBARANG='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "'");
        if (rs.next()) {
            kodebarang.setText(rs.getString(1));
            namabarang.setText(rs.getString(2));
            harga.setText(rs.getString(4));
            jumlah.setText(rs.getString(3));
            diskonitem.setText(rs.getString(5));
        }
        rs.close();
    } catch (SQLException ex) {
    }
}                                    

private void hasilDiskonKeyPressed(java.awt.event.KeyEvent evt) {                                       
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        //thasilDiskon = Double.parseDouble(hasilDiskon.getText());
        hasilBayar.requestFocus();
        hasilAkhir();
    }

    //hasilDiskon.setText(com.erv.function.Util.toMoney(thasilDiskon));
}                                      

private void hasilBayarCaretUpdate(javax.swing.event.CaretEvent evt) {                                       
// TODO add your handling code here:
    if (hasilBayar.getText().length() > 0) {
        sisa = ttotalbayar - Double.parseDouble(hasilBayar.getText());
        hasilSisa.setText(com.erv.function.Util.toMoney(sisa));
    } else {
        hasilSisa.setText("");
    }
}                                      

private void hasilBayarKeyPressed(java.awt.event.KeyEvent evt) {                                      
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        if (sisa > 0) {
            statusbayar.setSelectedIndex(1);
        } else {
            statusbayar.setSelectedIndex(0);
        }
        btnSimpanHasil.requestFocus();
    }
}                                     

private void btnSimpanHasilActionPerformed(java.awt.event.ActionEvent evt) {                                               
// TODO add your handling code here:
    if (sisa > 0) {
            statusbayar.setSelectedIndex(1);
        } else {
            statusbayar.setSelectedIndex(0);
        }
    tdp = Float.parseFloat(hasilBayar.getText());
    hasilAkhir();
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if (jTabbedPane1.getSelectedIndex()==0) {
            prosesSimpan();
            insertJurnal("JUAL");
            insertRinciJurnal();
        } else {
            prosesSimpanRetur();
            insertJurnal("RETUR");
            insertRinciJurnalRetur();
        }
        selesai();
    } else {
        System.out.print("tidak");
    }
}                                              

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
    tdp = Float.parseFloat(hasilBayar.getText());
    hasilAkhir();
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Di Update?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        prosesUpdate();
        insertJurnal("JUAL");
        insertRinciJurnal();
        selesai();
    } else {
        System.out.print("tidak");
    }
}                                        

private void jTable3KeyPressed(java.awt.event.KeyEvent evt) {                                   
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        try {
            pelanggan b = new pelanggan();
            pelangganDao dbpelanggan = new pelangganDao(c);
            b = dbpelanggan.getDetails(jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString());
            if (pilPelanggan.equals("0")) {
                kodepelanggan.setText(b.getKODEPELANGGAN());
                namapelanggan.setText(b.getNAMA());
                jScrollPane3.setVisible(false);
                diskon.requestFocus();
            } else if (pilPelanggan.equals("1")) {
                kodepelanggan1.setText(b.getKODEPELANGGAN());
                namapelanggan1.setText(b.getNAMA());
                jScrollPane3.setVisible(false);
                kodebarang.requestFocus();
            }


        } catch (Exception ex) {
        }
    }
}                                  

private void txtkodeReturActionPerformed(java.awt.event.ActionEvent evt) {                                             
// TODO add your handling code here:
}                                            

private void kodepelanggan1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
// TODO add your handling code here:
    pilPelanggan = "1";
    setting();
    jScrollPane3.setVisible(true);
    JDBCAdapter ja = new JDBCAdapter(c);
    ja.executeQuery("select KODEPELANGGAN,NAMA from PELANGGAN where KODEPELANGGAN like '" + kodepelanggan.getText() + "%' or lower(NAMA) like '" + kodepelanggan.getText().toLowerCase() + "%'");
    jScrollPane3.getViewport().remove(jTable3);
    jTable3 = new JTable(ja);
    jTable3.addKeyListener(new java.awt.event.KeyAdapter() {

        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTable3KeyPressed(evt);
        }
    });
    jTable3.setFont(new Font("Tahoma", Font.BOLD, 12));
    jScrollPane3.getViewport().add(jTable3);
    jScrollPane3.repaint();
}                                              

private void kodepelanggan1KeyPressed(java.awt.event.KeyEvent evt) {                                          
// TODO add your handling code here:
    System.out.print(evt.getKeyCode());
    if (evt.getKeyCode() == 40) {
        jScrollPane3.setVisible(true);
        jTable3.requestFocus();
        jTable3.getSelectionModel().setSelectionInterval(0, 0);
    }
    if (evt.getKeyCode() == 27) {
        jScrollPane3.setVisible(false);
    }
}                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogPenjualan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogPenjualan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogPenjualan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogPenjualan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogPenjualan1 dialog = new DialogPenjualan1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnSimpanHasil;
    private javax.swing.JButton btnTambahRetur;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btninsert;
    private javax.swing.JComboBox cboBank;
    private javax.swing.JComboBox cboBank1;
    private javax.swing.JComboBox cboCaraBayar;
    private javax.swing.JComboBox cboCaraBayar1;
    private javax.swing.JComboBox cboStatDiskon;
    private javax.swing.JComboBox cboStatDiskonItem;
    private javax.swing.JComboBox cboStatPPN;
    private javax.swing.JTextField diskon;
    private javax.swing.JTextField diskonitem;
    private javax.swing.JTextField harga;
    private javax.swing.JTextField hasilBayar;
    private javax.swing.JTextField hasilDiskon;
    private javax.swing.JTextField hasilSisa;
    private javax.swing.JTextField hasilTotal;
    private javax.swing.JTextField hasilTotalBayar;
    private javax.swing.JTextField hasilppn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jumlah;
    private javax.swing.JTextField kodebarang;
    private javax.swing.JTextField kodepelanggan;
    private javax.swing.JTextField kodepelanggan1;
    private javax.swing.JTextField namabarang;
    private javax.swing.JTextField namapelanggan;
    private javax.swing.JTextField namapelanggan1;
    private javax.swing.JTextField nofaktur;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField ppn;
    private javax.swing.JComboBox statusbayar;
    private datechooser.beans.DateChooserCombo tgl;
    private datechooser.beans.DateChooserCombo tglRetur;
    private datechooser.beans.DateChooserCombo tgllunas;
    private javax.swing.JTextField txtkodeRetur;
    // End of variables declaration

    void reloadData() {
        JDBCAdapter j = new JDBCAdapter(cm);
        j.executeQuery("select * from rinci");
        jScrollPane1.getViewport().remove(jTable1);
        jTable1 = new JTable(j);
        jTable1.setFont(new Font("Tahoma", Font.BOLD, 12));
        TableColumn col = jTable1.getColumnModel().getColumn(1);
        col.setPreferredWidth(200);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setFocusable(false);
        jTable1.setFocusable(false);
        jScrollPane1.getViewport().add(jTable1);
        jScrollPane1.repaint();
        try {
            Statement s = cm.createStatement();
            ResultSet r = s.executeQuery("select * from rinci");
            while (r.next()) {
                total += r.getDouble(6);
                hpp += dbbarang.getDetails(r.getString(1)).getCOGS() * r.getInt(3);
            }
            hasilAkhir();
            r.close();
        } catch (Exception ex) {
        }

    }

    void hasilAkhir() {
        tppn = getPPN();
        tdiskon = getDiskon();
        ttotalbayar = total + tppn - tdiskon;
        // hasilBayar.setText(com.erv.function.Util.toMoney(tdp));

        hasilppn.setText(com.erv.function.Util.toMoney(tppn));
        hasilTotal.setText(com.erv.function.Util.toMoney(total));
        hasilDiskon.setText(com.erv.function.Util.toMoney(tdiskon));
        hasilTotalBayar.setText(com.erv.function.Util.toMoney(ttotalbayar));
    }

    float getDiskon() {
        float hasil = 0;
        if (cboStatDiskon.getSelectedIndex() == 0) {
            hasil = Float.parseFloat(diskon.getText()) / 100 * (float) total;
        } else if (cboStatDiskon.getSelectedIndex() == 1) {
            hasil = Float.parseFloat(diskon.getText());
        }
        return hasil;
    }

    float getPPN() {
        float hasil = 0;
        if (cboStatPPN.getSelectedIndex() == 0) {
            hasil = Float.parseFloat(ppn.getText()) / 100 * (float) total;
        } else if (cboStatPPN.getSelectedIndex() == 1) {
            hasil = Float.parseFloat(ppn.getText());
        }
        return hasil;
    }

    void kosongFaktur() {
        nofaktur.setText("");
        kodepelanggan.setText("");
        diskon.setText("0");
        ppn.setText("0");
        namapelanggan.setText("");
    }

    void kosongBarang() {
        kodebarang.setText("");
        namabarang.setText("");
        harga.setText("");
        //diskonitem.setText("0");
        jumlah.setText("");
        kodebarang.requestFocus();
    }

    void kosongHasil() {
        hasilBayar.setText("0");
        hasilDiskon.setText("0");
        hasilSisa.setText("0");
        hasilTotal.setText("0");
        hasilTotalBayar.setText("0");
        hasilppn.setText("0");
    }

    float getDiskonitem() {
        float hasil = 0;
//        if (cboStatDiskonItem.getSelectedIndex() == 0) {
//            hasil = Float.parseFloat(diskonitem.getText()) / 100 * (Float.parseFloat(harga.getText()));
//        } else if (cboStatDiskonItem.getSelectedIndex() == 1) {
//            hasil = Float.parseFloat(diskonitem.getText());
//        }
        return hasil;
    }

    void buatTabel() {
        String sqlCreate = "create table rinci (KODEBARANG varchar(20) primary key, "
                + "NAMABARANG varchar(50), "
                + "JUMLAH int, "
                + "HARGA double, "
                + "DISKON double, "
                + "TOTAL double)";
        try {
            stat.execute(sqlCreate);
        } catch (SQLException ex) {
        }
    }

    void hapusTabel() {
        try {
            stat.execute("drop table rinci");
        } catch (SQLException ex) {
        }
    }

    void setFaktur() {
        String tgl = com.erv.function.Util.toDateStringSql(new Date());
        try {
            IDjual = dbpenjualan.getID();
            nofaktur.setText("J" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDjual);

        } catch (SQLException ex) {
        }
    }

    void setRetur() {
        String tgl = com.erv.function.Util.toDateStringSql(new Date());
        try {
            IDretur = returDao.getID(c);
            txtkodeRetur.setText("R" + com.erv.function.Util.getbln(tgl) + com.erv.function.Util.getthn(tgl) + IDretur);

        } catch (SQLException ex) {
        }
    }

    void prosesSimpan() {
        try {
            p.setID(IDjual);
            p.setFAKTUR(nofaktur.getText());
            p.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
            p.setKODEPELANGGAN(kodepelanggan.getText());
            p.setCASH(String.valueOf(statusbayar.getSelectedIndex()));
            p.setTGLLUNAS(java.sql.Date.valueOf(tgllunas.getText()));
            p.setPPN(getPPN());
            if (statusbayar.getSelectedIndex() == 1) {
                p.setDP(tdp);
            } else {
                p.setDP(0f);
            }
            p.setDISKON(getDiskon());
            if (!dbpenjualan.insert(p)) {
                JOptionPane.showMessageDialog(this, "Entri Penjualan Ok");
                Statement s = cm.createStatement();
                ResultSet r = s.executeQuery("select * from rinci");
                rincipenjualan rp = new rincipenjualan();
                stok st = new stok();
                rincipenjualanDao dbrp = new rincipenjualanDao(c);
                while (r.next()) {
                    rp.setID(dbrp.getID());
                    rp.setIDPENJUALAN(IDjual);
                    rp.setKODEBARANG(r.getString(1));
                    rp.setJUMLAH(r.getInt(3));
                    rp.setHARGA(r.getDouble(4));
                    rp.setDISKON(r.getFloat(5));
                    rp.setTOTAL(r.getDouble(6));
                    dbrp.insert(rp);
                    st.setIDPENJUALAN(IDjual);
                    st.setKODEBARANG(r.getString(1));
                    st.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
                    st.setIN(0);
                    st.setOUT(r.getInt(3));
                    st.setKODETRANS("J");
                    stokDao.insertIntoSTOK(c, st);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Entri Penjualan Gagal");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
            ex.printStackTrace();
        }
    }

//    void prosesSimpanRetur() {
//        try {
//            retur r=new retur();
//            IDretur=returDao.getID(c);
//            r.setID(IDretur);
//            r.setKODERETUR(txtkodeRetur.getText());
//            r.setTANGGAL(java.sql.Date.valueOf(tglRetur.getText()));
//            r.setKODEPELANGGAN(kodepelanggan1.getText());
//            r.setKETERANGAN("Return dari "+namapelanggan1.getText());
//            if (returDao.insertIntoRETUR(c,r)) {
//                JOptionPane.showMessageDialog(this, "Entri Retur Ok");
//                Statement s = cm.createStatement();
//                ResultSet rs = s.executeQuery("select * from rinci");
//                rinciretur rr = new rinciretur();
//                stok st = new stok();
//                while (rs.next()) {
//                    rr.setID(rincireturDao.getID(c));
//                    rr.setIDRETUR(IDretur);
//                    rr.setKODEBARANG(rs.getString(1));
//                    rr.setJUMLAH(rs.getInt(3));
//                    rr.setHARGA(rs.getFloat(4));
//                    rr.setTOTAL(rs.getFloat(6));
//                    rincireturDao.insertIntoRINCIRETUR(c,rr);
//                    st.setIDPENJUALAN(IDretur);
//                    st.setKODEBARANG(rs.getString(1));
//                    st.setTANGGAL(java.sql.Date.valueOf(tglRetur.getText()));
//                    st.setIN(rs.getInt(3));
//                    st.setOUT(0);
//                    st.setKODETRANS("R"); 
//                    stokDao.insertIntoSTOK(c, st);
//                }
//
//            } else {
//                JOptionPane.showMessageDialog(this, "Entri Retur Gagal");
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, ex.toString());
//            ex.printStackTrace();
//        }
//    }
    void prosesUpdate() {
        try {
            p.setID(IDjual);
            p.setFAKTUR(nofaktur.getText());
            p.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
            p.setKODEPELANGGAN(kodepelanggan.getText());
            p.setCASH(String.valueOf(statusbayar.getSelectedIndex()));
            p.setTGLLUNAS(java.sql.Date.valueOf(tgllunas.getText()));
            p.setPPN(getPPN());
            if (statusbayar.getSelectedIndex() == 1) {
                p.setDP(tdp);
            } else {
                p.setDP(0f);
            }
            p.setDISKON(getDiskon());
            if (!dbpenjualan.update(p)) {
                JOptionPane.showMessageDialog(this, "Update Penjualan Ok");
                Statement s = cm.createStatement();
                ResultSet r = s.executeQuery("select * from rinci");
                rincipenjualan rp = new rincipenjualan();
                stok st = new stok();
                rincipenjualanDao dbrp = new rincipenjualanDao(c);
                Statement sf = c.createStatement();
                sf.execute("delete from RINCIPENJUALAN where IDPENJUALAN=" + IDjual + "");
                sf.execute("delete from JURNAL where KODEJURNAL='" + nofaktur.getText() + "'");
                sf.execute("delete from stok where IDPENJUALAN=" + IDjual + " and KODETRANS='J'");
                while (r.next()) {
                    rp.setID(dbrp.getID());
                    rp.setIDPENJUALAN(IDjual);
                    rp.setKODEBARANG(r.getString(1));
                    rp.setJUMLAH(r.getInt(3));
                    rp.setHARGA(r.getDouble(4));
                    rp.setDISKON(r.getFloat(5));
                    rp.setTOTAL(r.getDouble(6));
                    dbrp.insert(rp);
                    st.setIDPENJUALAN(IDjual);
                    st.setKODEBARANG(r.getString(1));
                    st.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
                    st.setIN(0);
                    st.setOUT(r.getInt(3));
                    st.setKODETRANS("J");
                    stokDao.insertIntoSTOK(c, st);
                }
                r.close();
                sf.close();
                s.close();
            } else {
                JOptionPane.showMessageDialog(this, "Update Penjualan Gagal");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }

    void prosesDelete() {
        try {
            Statement sf = c.createStatement();
            //sf.execute("delete from RINCIPENJUALAN where IDPENJUALAN=" + IDjual + "");
            sf.execute("delete from PENJUALAN where ID=" + IDjual + "");
            JOptionPane.showMessageDialog(this, "Delete Ok");
            sf.close();
            hapusTabel();
            buatTabel();
            hpp = 0;
            total = 0;
            reloadData();
            kosongFaktur();
            kosongBarang();
            kosongHasil();
            jTabbedPane1.setSelectedIndex(0);
            setFaktur();
            kodepelanggan.requestFocus();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }

    void insertJurnal(String pil) {
        jurnal j = new jurnal();
        jurnalDao dbjurnal = new jurnalDao();

        try {
            IDJurnal = dbjurnal.getIDJurnal(c);
            j.setID(IDJurnal);
            j.setKODEJURNAL(nofaktur.getText());
            j.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
            if (pil.equals("JUAL")) {
                j.setDESKRIPSI("Penjualan Kepada " + namapelanggan.getText());
            } else if (pil.equals("RETUR")) {
                j.setDESKRIPSI("Pengembalian Barang Dari " + namapelanggan1.getText());
            }

            dbjurnal.insertIntoJURNAL(c, j);
        } catch (Exception ex) {
        }
    }

    void insertRinciJurnal() {
        Statement s;
        try {
            s = c.createStatement();
            if (statusbayar.getSelectedIndex() == 0) {
                if (tdiskon == 0 && tppn == 0) {
                    if(cboCaraBayar.getSelectedIndex()==0){
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "KAS") + "'," + ttotalbayar + ",0,1)");
                    }else{
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + bankDao.getDetails(c, Integer.parseInt(id[cboBank.getSelectedIndex()])).getKODEAKUN() + "'," + ttotalbayar + ",0,1)");
                    }
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "',0," + ttotalbayar + ",2)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "'," + hpp + ",0,3)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "',0," + hpp + ",4)");
                } else if (tdiskon != 0 && tppn == 0) {
                    if(cboCaraBayar.getSelectedIndex()==0){
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "KAS") + "'," + ttotalbayar + ",0,1)");
                    }else{
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + bankDao.getDetails(c, Integer.parseInt(id[cboBank.getSelectedIndex()])).getKODEAKUN() + "'," + ttotalbayar + ",0,1)");
                    }
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "DISKONJUAL") + "'," + tdiskon + ",0,2)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "',0," + total + ",3)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "'," + hpp + ",0,4)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "',0," + hpp + ",5)");
                } else if (tdiskon == 0 && tppn != 0) {
                    if(cboCaraBayar.getSelectedIndex()==0){
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "KAS") + "'," + ttotalbayar + ",0,1)");
                    }else{
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + bankDao.getDetails(c, Integer.parseInt(id[cboBank.getSelectedIndex()])).getKODEAKUN() + "'," + ttotalbayar + ",0,1)");
                    }
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PPNJUAL") + "',0," + tppn + ",2)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "',0," + total + ",3)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "'," + hpp + ",0,4)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "',0," + hpp + ",5)");
                } else if (tdiskon != 0 && tppn != 0) {
                    if(cboCaraBayar.getSelectedIndex()==0){
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "KAS") + "'," + ttotalbayar + ",0,1)");
                    }else{
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + bankDao.getDetails(c, Integer.parseInt(id[cboBank.getSelectedIndex()])).getKODEAKUN() + "'," + ttotalbayar + ",0,1)");
                    }
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "DISKONJUAL") + "'," + tdiskon + ",0,2)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PPNJUAL") + "',0," + tppn + ",3)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "',0," + total + ",4)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "'," + hpp + ",0,5)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "',0," + hpp + ",6)");
                }
            } else if (statusbayar.getSelectedIndex() == 1) {
                if (tdiskon == 0 && tppn == 0) {
                    pelangganDao dbplg =new pelangganDao(c);
                    if(cboCaraBayar.getSelectedIndex()==0){
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "KAS") + "'," + ttotalbayar + ",0,1)");
                    }else{
                        s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + bankDao.getDetails(c, Integer.parseInt(id[cboBank.getSelectedIndex()])).getKODEAKUN() + "'," + ttotalbayar + ",0,1)");
                    }
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + dbplg.getDetails(kodepelanggan.getText()).getKODEAKUN() + "'," + sisa + ",0,2)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "',0," + ttotalbayar + ",3)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "'," + hpp + ",0,4)");
                    s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "',0," + hpp + ",5)");
                }
            }
            s.close();
        } catch (Exception ex) {
        }
    }

    void insertRinciJurnalRetur() {
        Statement s;
        try {
            s = c.createStatement();
            s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PIUTANG") + "',0," + ttotalbayar + ",1)");
            s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PENJUALAN") + "'," + ttotalbayar + ",0,2)");
            s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "HPP") + "',0," + hpp + ",3)");
            s.execute("insert into RINCIJURNAL values(" + IDJurnal + ",'" + settingDao.getAkun(c, "PERSEDIAAN") + "'," + hpp + ",0,4)");
            s.close();
        } catch (Exception ex) {
        }
    }

    void selesai() {
        hapusTabel();
        buatTabel();
        total = 0;
        hpp = 0;
        reloadData();
        kosongFaktur();
        kosongBarang();
        kosongHasil();
        jTabbedPane1.setSelectedIndex(0);
        setFaktur();
        kodepelanggan.requestFocus();
    }

    void kosongRetur() {
        txtkodeRetur.setText("");
        kodepelanggan1.setText("");
        namapelanggan1.setText("");
    }

    void prosesSimpanRetur() {
        try {
            r.setID(IDretur);
            r.setKODERETUR(txtkodeRetur.getText());
            r.setKODEPELANGGAN(kodepelanggan1.getText());
            r.setTANGGAL(java.sql.Date.valueOf(tglRetur.getText()));
            r.setKETERANGAN("Pengembalian Barang Dari " + namapelanggan1.getText());
            if (returDao.insertIntoRETUR(c, r)) {
                JOptionPane.showMessageDialog(this, "Entri Retur Ok");
                Statement s = cm.createStatement();
                ResultSet r = s.executeQuery("select * from rinci");
                rinciretur rr = new rinciretur();
                stok st = new stok();
                while (r.next()) {
                    rr.setID(rincireturDao.getID(c));
                    rr.setIDRETUR(IDretur);
                    rr.setKODEBARANG(r.getString(1));
                    rr.setJUMLAH(r.getInt(3));
                    rr.setHARGA(r.getFloat(4));
                    rr.setTOTAL(r.getFloat(6));
                    rincireturDao.insertIntoRINCIRETUR(c, rr);
                    st.setIDPENJUALAN(IDjual);
                    st.setKODEBARANG(r.getString(1));
                    st.setTANGGAL(java.sql.Date.valueOf(tgl.getText()));
                    st.setIN(r.getInt(3));
                    st.setKODETRANS("R");
                    st.setOUT(0);
                    stokDao.insertIntoSTOK(c, st);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Entri Retur Gagal");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }
    void setting(){
        jScrollPane3.setSize(500, 150);
        jScrollPane2.setSize(500, 150); 
    }
    void isiCombo(){
        cboBank.removeAllItems();
        try {
            Statement stat=c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet rs=stat.executeQuery("select * from BANK");
            int i=0;
            rs.last();
            if(rs.getRow()>0) 
                id = new String[rs.getRow()];
            rs.beforeFirst();
            while(rs.next()){
                id[i]=rs.getString(1);
                cboBank.addItem(rs.getString(2)); 
                i++;
            }
            rs.close();
            stat.close();
        } catch (SQLException ex) {
            Logger.getLogger(DialogPenjualan1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
