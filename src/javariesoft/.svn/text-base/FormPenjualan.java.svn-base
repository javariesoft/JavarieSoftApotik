/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormPenjualan.java
 *
 * Created on Nov 6, 2011, 1:07:44 AM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.function.JDBCAdapter;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author erwadi
 */
public class FormPenjualan extends javax.swing.JInternalFrame {

    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");

    /** Creates new form FormPenjualan */
    public FormPenjualan() {
        initComponents();
        setLayar();
        setSize(dim.width, dim.height);
        setLocation(0, 0);
        isiCombo();
        tglTransaksi.setDateFormat(d);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtKriteria = new com.erv.function.TextFieldCool();
        cbokriteria = new javax.swing.JComboBox();
        tglTransaksi = new datechooser.beans.DateChooserCombo();
        btnFilter = new javax.swing.JButton();
        cboStatus = new javax.swing.JComboBox();
        btnview = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormPenjualan.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFont(resourceMap.getFont("Form.font")); // NOI18N
        setName("Form"); // NOI18N

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        btnAdd.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        btnAdd.setIcon(resourceMap.getIcon("btnAdd.icon")); // NOI18N
        btnAdd.setText(resourceMap.getString("btnAdd.text")); // NOI18N
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);
        btnAdd.setBounds(10, 10, 100, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);
        btnDelete.setBounds(360, 10, 0, 25);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(470, 10, 70, 15);

        txtKriteria.setText(resourceMap.getString("txtKriteria.text")); // NOI18N
        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        jPanel1.add(txtKriteria);
        txtKriteria.setBounds(700, 10, 210, 24);

        cbokriteria.setFont(resourceMap.getFont("cbokriteria.font")); // NOI18N
        cbokriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbokriteria.setName("cbokriteria"); // NOI18N
        cbokriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbokriteriaActionPerformed(evt);
            }
        });
        jPanel1.add(cbokriteria);
        cbokriteria.setBounds(540, 10, 140, 21);

        tglTransaksi.setFieldFont(resourceMap.getFont("tglTransaksi.dch_combo_fieldFont")); // NOI18N
        jPanel1.add(tglTransaksi);
        tglTransaksi.setBounds(720, 10, 180, 20);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        jPanel1.add(btnFilter);
        btnFilter.setBounds(920, 10, 90, 23);

        cboStatus.setFont(resourceMap.getFont("cboStatus.font")); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboStatus.setName("cboStatus"); // NOI18N
        jPanel1.add(cboStatus);
        cboStatus.setBounds(710, 10, 180, 21);

        btnview.setFont(resourceMap.getFont("btnview.font")); // NOI18N
        btnview.setIcon(resourceMap.getIcon("btnview.icon")); // NOI18N
        btnview.setText(resourceMap.getString("btnview.text")); // NOI18N
        btnview.setName("btnview"); // NOI18N
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        jPanel1.add(btnview);
        btnview.setBounds(120, 10, 100, 25);

        btnBayar.setFont(resourceMap.getFont("btnBayar.font")); // NOI18N
        btnBayar.setIcon(resourceMap.getIcon("btnBayar.icon")); // NOI18N
        btnBayar.setText(resourceMap.getString("btnBayar.text")); // NOI18N
        btnBayar.setName("btnBayar"); // NOI18N
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBayar);
        btnBayar.setBounds(230, 10, 130, 25);

        panelCool1.add(jPanel1);
        jPanel1.setBounds(10, 10, 1020, 40);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setFont(resourceMap.getFont("jTable1.font")); // NOI18N
        jTable1.setName("jTable1"); // NOI18N
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 870, 402);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1064)/2, (screenSize.height-503)/2, 1064, 503);
    }// </editor-fold>//GEN-END:initComponents

private void cbokriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbokriteriaActionPerformed
// TODO add your handling code here:
    pilihKriteria(cbokriteria.getSelectedIndex());
}//GEN-LAST:event_cbokriteriaActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    reloadData();
}//GEN-LAST:event_btnFilterActionPerformed

private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
// TODO add your handling code here:
    DialogPenjualan dp = new DialogPenjualan(null, false);
    dp.setVisible(true);
}//GEN-LAST:event_btnAddActionPerformed

private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
// TODO add your handling code here:
    try {
    DialogPenjualan d = new DialogPenjualan(null,false,Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString()));
    d.setVisible(true);
    }catch(Exception e){}
}//GEN-LAST:event_btnviewActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Di Hapus?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        Statement sf;
        try {
            sf = koneksi.getKoneksiJ().createStatement();
            sf.execute("delete from PENJUALAN where ID=" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "");
            sf.execute("delete from STOK where IDPENJUALAN="+ jTable1.getValueAt(jTable1.getSelectedRow(), 0) +" AND KODETRANS='J'");
            JOptionPane.showMessageDialog(this, "Delete Ok");
            sf.close();
            reloadData();
        } catch (Exception ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
        //sf.execute("delete from RINCIPENJUALAN where IDPENJUALAN=" + IDjual + "");

    } else {
        System.out.print("tidak");
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
// TODO add your handling code here:
    DialogPiutang p = new DialogPiutang(null,true, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
    p.setVisible(true); 
}//GEN-LAST:event_btnBayarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnview;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JComboBox cbokriteria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool1;
    private datechooser.beans.DateChooserCombo tglTransaksi;
    private com.erv.function.TextFieldCool txtKriteria;
    // End of variables declaration//GEN-END:variables

    void setLayar() {
        jPanel1.setSize(dim.width - 40, 40);
        jScrollPane1.setLocation(jPanel1.getX(), jPanel1.getY() + jPanel1.getHeight() + 10);
        jScrollPane1.setSize(dim.width - 40, dim.height - 200);
    }

    void isiCombo() {
        cbokriteria.removeAllItems();
        cboStatus.removeAllItems();
        cbokriteria.addItem("TANGGAL");
        cbokriteria.addItem("PELANGGAN");
        cbokriteria.addItem("STATUS");
        cboStatus.addItem("LUNAS");
        cboStatus.addItem("HUTANG");
    }

    void pilihKriteria(int pil) {
        if (pil == 0) {
            tglTransaksi.setVisible(true);
            txtKriteria.setVisible(false);
            cboStatus.setVisible(false);
        } else if (pil == 1) {
            tglTransaksi.setVisible(false);
            txtKriteria.setVisible(true);
            cboStatus.setVisible(false);
        } else if (pil == 2) {
            tglTransaksi.setVisible(false);
            txtKriteria.setVisible(false);
            cboStatus.setVisible(true);
        }

    }

    void reloadData() {
        try {
            JDBCAdapter j = new JDBCAdapter(koneksi.getKoneksiJ());
            String sql = "select p.ID,p.FAKTUR,p.TANGGAL,pl.NAMA, "
                    + "case p.STATUS when '0' then 'LUNAS' when '1' then 'BELUM LUNAS' end as STATUS ,"
                    + "p.TGLLUNAS,(select sum(rp.TOTAL) from RINCIPENJUALAN rp where rp.IDPENJUALAN=p.ID) - p.DP as HUTANG , "
                    + "ifnull((select sum(RETURRINCI.TOTAL) from RETURRINCI "
                    + "INNER JOIN RETUR ON RETURRINCI.IDRETUR=RETUR.ID "
                    + "WHERE RETUR.IDPENJUALAN=p.ID),0) as RETUR, "
                    + "ifnull((select sum(PIUTANGBAYAR.JUMLAH) from PIUTANGBAYAR "
                    + "inner join PIUTANG on PIUTANGBAYAR.IDPIUTANG=PIUTANG.ID "
                    + "where PIUTANG.IDPENJUALAN=p.ID),0) as BAYAR, "
                    + "ifnull((select sum(rp.TOTAL) from RINCIPENJUALAN rp where rp.IDPENJUALAN=p.ID),0) - p.DP - "
                    + "ifnull((select sum(RETURRINCI.TOTAL) from RETURRINCI "
                    + "INNER JOIN RETUR ON RETURRINCI.IDRETUR=RETUR.ID "
                    + "WHERE RETUR.IDPENJUALAN=p.ID),0) - "
                    + "ifnull((select sum(PIUTANGBAYAR.JUMLAH) from PIUTANGBAYAR "
                    + "inner join PIUTANG on PIUTANGBAYAR.IDPIUTANG=PIUTANG.ID "
                    + "where PIUTANG.IDPENJUALAN=p.ID),0) as SISAHUTANG "
                    + " from PENJUALAN p,PELANGGAN pl "
                    + "where p.KODEPELANGGAN=pl.KODEPELANGGAN ";
            if (cbokriteria.getSelectedIndex() == 0) {
                sql += " and p.TANGGAL='" + tglTransaksi.getText() + "'";
            }
            if (cbokriteria.getSelectedIndex() == 1) {
                sql += " and lower(pl.NAMA) like '" + txtKriteria.getText().toLowerCase() + "%'";
            }
            if (cbokriteria.getSelectedIndex() == 2) {
                if (cboStatus.getSelectedIndex() == 0) {
                    sql += " and p.STATUS ='0'";
                } else if (cboStatus.getSelectedIndex() == 1) {
                    sql += " and p.STATUS ='1'";
                }
            }
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            TableColumn col = jTable1.getColumnModel().getColumn(0);
            col.setPreferredWidth(50);
            col = jTable1.getColumnModel().getColumn(1);
            col.setPreferredWidth(100);
            col = jTable1.getColumnModel().getColumn(2);
            col.setPreferredWidth(100);
            col = jTable1.getColumnModel().getColumn(3);
            col.setPreferredWidth(200);
            col = jTable1.getColumnModel().getColumn(4);
            col.setPreferredWidth(350);
            jTable1.setRowHeight(20);
            jTable1.setFont(new Font("Tahoma", Font.BOLD, 14));
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
