/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormJenisBarang.java
 *
 * Created on Nov 14, 2011, 11:21:47 PM
 */
package javariesoft;

import com.erv.db.jenisbarangDao;
import com.erv.db.koneksi;
import com.erv.function.JDBCAdapter;
import com.erv.model.jenisbarang;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author erwadi
 */
public class FormJenisBarang extends javax.swing.JInternalFrame {

    Connection c = null;
    jenisbarang b = null;
    jenisbarangDao dbjenis = null;

    /** Creates new form FormJenisBarang */
    public FormJenisBarang() {
        initComponents();
        b = new jenisbarang();
        try {
            c = koneksi.getKoneksiJ();
            reloadData();
        } catch (Exception ex) {
            Logger.getLogger(FormJenisBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
        dbjenis = new jenisbarangDao();
        kosong();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel1 = new javax.swing.JLabel();
        kodejenis = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jenis = new javax.swing.JTextField();
        cmdInsert = new javax.swing.JButton();
        cmdUpdate = new javax.swing.JButton();
        cmdDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormJenisBarang.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(30, 60, 130, 15);

        kodejenis.setFont(resourceMap.getFont("kodejenis.font")); // NOI18N
        kodejenis.setText(resourceMap.getString("kodejenis.text")); // NOI18N
        kodejenis.setName("kodejenis"); // NOI18N
        panelCool1.add(kodejenis);
        kodejenis.setBounds(170, 30, 310, 21);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(30, 30, 130, 16);

        jenis.setFont(resourceMap.getFont("jenis.font")); // NOI18N
        jenis.setText(resourceMap.getString("jenis.text")); // NOI18N
        jenis.setName("jenis"); // NOI18N
        panelCool1.add(jenis);
        jenis.setBounds(170, 60, 310, 21);

        cmdInsert.setFont(resourceMap.getFont("cmdInsert.font")); // NOI18N
        cmdInsert.setText(resourceMap.getString("cmdInsert.text")); // NOI18N
        cmdInsert.setName("cmdInsert"); // NOI18N
        cmdInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdInsertActionPerformed(evt);
            }
        });
        panelCool1.add(cmdInsert);
        cmdInsert.setBounds(30, 100, 69, 23);

        cmdUpdate.setFont(resourceMap.getFont("cmdUpdate.font")); // NOI18N
        cmdUpdate.setText(resourceMap.getString("cmdUpdate.text")); // NOI18N
        cmdUpdate.setName("cmdUpdate"); // NOI18N
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(cmdUpdate);
        cmdUpdate.setBounds(110, 100, 80, 23);

        cmdDelete.setFont(resourceMap.getFont("cmdDelete.font")); // NOI18N
        cmdDelete.setText(resourceMap.getString("cmdDelete.text")); // NOI18N
        cmdDelete.setName("cmdDelete"); // NOI18N
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(cmdDelete);
        cmdDelete.setBounds(200, 100, 80, 23);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 140, 452, 200);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(30, 90, 450, 10);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(30, 130, 450, 10);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-538)/2, (screenSize.height-386)/2, 538, 386);
    }// </editor-fold>//GEN-END:initComponents

private void cmdInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdInsertActionPerformed
// TODO add your handling code here:
    prosesUpdate(0);
    reloadData();
    kosong();
}//GEN-LAST:event_cmdInsertActionPerformed

private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
// TODO add your handling code here:
    prosesUpdate(1);
    reloadData();
    kosong();
}//GEN-LAST:event_cmdUpdateActionPerformed

private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
    try {
        // TODO add your handling code here:
        dbjenis.deleteFromJENISBARANG(c, kodejenis.getText());
        reloadData();
        kosong();
    } catch (SQLException ex) {
        Logger.getLogger(FormJenisBarang.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_cmdDeleteActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // TODO add your handling code here:
                b=dbjenis.getDetails(c, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                kodejenis.setText(b.getID());
                jenis.setText(b.getJENIS());
        } catch (SQLException ex) {
            Logger.getLogger(FormJenisBarang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormJenisBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_jTable1MouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdInsert;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jenis;
    private javax.swing.JTextField kodejenis;
    private com.erv.function.PanelCool panelCool1;
    // End of variables declaration//GEN-END:variables

    void kosong() {
        kodejenis.setText("");
        jenis.setText("");
    }

    void prosesUpdate(int p) {
        b.setID(kodejenis.getText());
        b.setJENIS(jenis.getText());
        try {
            boolean stat;
            if (p == 0) {
                stat = dbjenis.insertIntoJENISBARANG(c, b);
            } else {
                stat = dbjenis.updateJENISBARANG(c, b.getID(), b);
            }
            if (stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
                kosong();
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    public void reloadData() {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "select * from JENISBARANG";
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
        } catch (Exception ex) {
            Logger.getLogger(FormBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
